[{"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js":"1","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js":"2","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js":"3","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js":"4","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js":"5","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js":"6","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js":"7","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js":"8","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js":"9","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/SystemicConsensing.js":"10","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/VotingDummy.js":"11","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Navbar.js":"12","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js":"13","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js":"14","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js":"15","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Confettis.js":"16","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js":"17","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Burger.js":"18","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/RightNav.js":"19"},{"size":432,"mtime":1612955910033,"results":"20","hashOfConfig":"21"},{"size":2047,"mtime":1612880150465,"results":"22","hashOfConfig":"21"},{"size":245,"mtime":1612169373723,"results":"23","hashOfConfig":"21"},{"size":5838,"mtime":1612954039537,"results":"24","hashOfConfig":"21"},{"size":2253,"mtime":1612953319084,"results":"25","hashOfConfig":"21"},{"size":2042,"mtime":1612955907419,"results":"26","hashOfConfig":"21"},{"size":1067,"mtime":1612880150472,"results":"27","hashOfConfig":"21"},{"size":4389,"mtime":1612955908985,"results":"28","hashOfConfig":"21"},{"size":6021,"mtime":1612955908308,"results":"29","hashOfConfig":"21"},{"size":4193,"mtime":1612955912446,"results":"30","hashOfConfig":"21"},{"size":4340,"mtime":1612791843595,"results":"31","hashOfConfig":"21"},{"size":760,"mtime":1612948829053,"results":"32","hashOfConfig":"21"},{"size":1461,"mtime":1612880150475,"results":"33","hashOfConfig":"21"},{"size":2097,"mtime":1612880150467,"results":"34","hashOfConfig":"21"},{"size":1524,"mtime":1612955909522,"results":"35","hashOfConfig":"21"},{"size":761,"mtime":1612950644518,"results":"36","hashOfConfig":"21"},{"size":11638,"mtime":1612955910586,"results":"37","hashOfConfig":"21"},{"size":1253,"mtime":1612950894138,"results":"38","hashOfConfig":"21"},{"size":418,"mtime":1612947704017,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hj2o9b",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js",[],["81","82"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js",["83"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js",["84","85","86"],"import React, { useState, useRef, useEffect } from 'react'\n\nimport { \n  LinkBorderContainer,\n  Container} from '../lib/Styling'\n\nexport const About= () => {\n  return (\n    <>\n      <Container>\n        <LinkBorderContainer>\n          <h1 className='heading'>About us</h1>\n          <p className='about-text'>\n            This page was built as a graduation project by three developers, participating \n            in the Bootcamp for Frontend Developers at Technigo in Stockholm, Sweden. \n          </p>\n          <p className='about-text'>\n            The idea was born when a friend of one of the developers talked about her work\n            as a social worker with kids and teens. There, only following the majority in decisions \n            for group activities sometimes could mean that you fail to see thoughts and feelings of some\n            individuals that deserve attention. It puts minorities into a hard position. \n            And it might let you miss alternatives that actually would have everyone's support. \n          </p>\n          <p className='about-text'>\n            We felt, that this is not only the case in groups of kids and teens, but even in work life, \n            families, sport teams or whichever group you might be a member of. This is why we decided to build a\n            tool to easily practice this way of consense-finding. This is why we made POLLIC.\n          </p>\n          <p className='about-text'>\n            If you want to know more about us, visit us here:\n            {/* Insert Links to our portfolios here */}\n            <ul>\n              <li>\n                <a href='https://ingelalofgren-portfolio.netlify.app/'>Ingela LÃ¶fgren</a>\n              </li>\n              <li>\n                <a href='https://henrikewiemker-portfolio.netlify.app/'>Henrike Wiemker</a>\n              </li>\n              <li>\n                <a href='https://karanmann.netlify.app/'>Karan Mann</a>\n              </li>\n            </ul>\n          </p>\n        </LinkBorderContainer>\n      </Container>\n    </>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/SystemicConsensing.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/VotingDummy.js",["87"],"import { Divider } from '@material-ui/core'\nimport React from 'react'\n\nimport styled from 'styled-components/macro'\n\nexport const VotingDummy = () => {\n    const poll = { \n        _id: '123',\n        pollTopic: 'Example Poll',\n        pollOptions: [{\n            _id: '456',\n            text: 'First option'\n        },\n        {\n            _id: '789',\n            text: 'Second option'\n        },\n        {\n            _id: '523',\n            text: 'Third option'\n        }\n        ]\n      } \n    const finishedPolls = [\n        {\n           name: 'Bob',\n           pollId: '123',\n           voting: \n           [\n               {\n                   optionId: '456',\n                   objectionsPoints: 2,\n               },\n\n               {\n                    optionId: '789',\n                    objectionsPoints: 8,\n            },\n            {\n                    optionId: '523',\n                    objectionsPoints: 7,\n            }\n           ] \n        },\n\n        {\n            name: 'Ann',\n            pollId: '123',\n            voting: \n            [\n                {\n                    optionId: '456',\n                    objectionsPoints: 5,\n                },\n                {\n                    optionId: '789',\n                    objectionsPoints: 5,\n            },\n            {\n                    optionId: '523',\n                    objectionsPoints: 3,\n            }\n            ] \n         },\n\n         {\n            name: 'Kim',\n            pollId: '123',\n            voting: \n            [\n                {\n                    optionId: '456',\n                    objectionsPoints: 8,\n                },\n                {\n                    optionId: '789',\n                    objectionsPoints: 1,\n            },\n            {\n                    optionId: '523',\n                    objectionsPoints: 2,\n            }\n            ] \n         }\n    ]\n\n    \n    // code from Maks. OBS result !=== our result\n    // const result = {}; xAsValuesArray.map(item => { result[item[0]] = item[1].reduce((a, b) => a + b); });\n    // const xAsValuesArray = Object.entries(x);\n\n    \n    // Changing the structure of our data to make it more accessible for JSX\n\n    // First step: build prel to look like this\n    // {\n    //   456: [2,5,8],\n    //   789: [8,5,1],\n    //   523: [7,3,2]\n    // }\n\n    const prel = {}\n    for (let i = 0; i < finishedPolls.length; i++) {\n      finishedPolls[i].voting.forEach(obj => {\n        const {optionId, objectionsPoints} = obj\n        if (prel[optionId]) {\n          prel[optionId].push(objectionsPoints)\n       } else {\n          prel[optionId] = [objectionsPoints]\n       }\n      })\n    };\n    console.log(prel)\n\n    // Second step: build prelAsValuesArray to look like this\n    // [ [456,[2,5,8]], [789, [8,5,1]], [523, [7,3,2]] ]\n\n    const prelAsValuesArray = Object.entries(prel)\n\n    // Thirs step: build result to look like this\n    // {\n    //   456: 15,\n    //   789: 14,\n    //   523: 12\n    // }\n\n    const result = {}\n    prelAsValuesArray.map(item => {\n     return result[item[0]] = item[1].reduce((a,b) => a + b)\n    })\n    console.log(result)\n\n    // Fourth step: Build resultEntries to look like this\n    // [[456,12], [789,14], [523,12]]\n\n    const resultEntries = Object.entries(result)\n    resultEntries.sort((a,b) => {\n      return a[1] - b[1]\n    })\n    \n    console.log(resultEntries)\n   \n    // In the return statement, map through all the options in the original poll.\n    // At the same time, map through the item in resultEntries.\n    // If you find a matching option / result-entry, display the option text and the second part (the points) of the result entry.\n\n \n/* constÂ winnerColorÂ =Â ()Â =>Â {\nÂ Â Â Â Â      const isWinner =Â (Math.min(pair[1]))\n          ifÂ (isWinner.isCorrect) {\n      return '#28df99'\nÂ Â Â Â }\n      */\nconstÂ PointsÂ =Â styled.pÂ `\n  border:Â ${propsÂ =>Â props.true === 0 ? 'solid green 2px' : ''}\n`\n\n \n\n    return (\n      <>\n        {resultEntries.map((pair, index) => {\n          return (\n            poll.pollOptions.map(option => (\n              option._id === pair[0] &&\n              <div>\n                <p>{option.text}</p>\n                <Points \n                true={index}\n                >{pair[1]}\n                </Points>\n              </div>\n            ))\n          )\n        })}\n      </>\n    )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Navbar.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Confettis.js",["88"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Burger.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/RightNav.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":153,"column":6,"nodeType":"95","endLine":153,"endColumn":23,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"101","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"102","line":1,"column":35,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"103","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":17},{"ruleId":"97","severity":1,"message":"104","line":13,"column":16,"nodeType":"99","messageId":"100","endLine":13,"endColumn":23},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storePollId'. Either include it or remove the dependency array.","ArrayExpression",["107"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Divider' is defined but never used.","'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"108","fix":"109"},"Update the dependencies array to be: [POLLDETAILS_URL, storePollId]",{"range":"110","text":"111"},[3669,3686],"[POLLDETAILS_URL, storePollId]"]