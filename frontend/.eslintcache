[{"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js":"1","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js":"2","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js":"3","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js":"4","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js":"5","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar.js":"6","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js":"7","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js":"8","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js":"9","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js":"10","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js":"11","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Table.js":"12","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js":"13","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js":"14","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js":"15"},{"size":432,"mtime":1610965996661,"results":"16","hashOfConfig":"17"},{"size":1483,"mtime":1611757888731,"results":"18","hashOfConfig":"17"},{"size":750,"mtime":1611761576487,"results":"19","hashOfConfig":"17"},{"size":897,"mtime":1611757888741,"results":"20","hashOfConfig":"17"},{"size":486,"mtime":1611757888737,"results":"21","hashOfConfig":"17"},{"size":689,"mtime":1611757888738,"results":"22","hashOfConfig":"17"},{"size":174,"mtime":1611146293413,"results":"23","hashOfConfig":"17"},{"size":246,"mtime":1611146130929,"results":"24","hashOfConfig":"17"},{"size":81,"mtime":1611068084358,"results":"25","hashOfConfig":"17"},{"size":4324,"mtime":1611822441074,"results":"26","hashOfConfig":"17"},{"size":1493,"mtime":1611759482124,"results":"27","hashOfConfig":"17"},{"size":333,"mtime":1611072258878,"results":"28","hashOfConfig":"17"},{"size":1241,"mtime":1611822459725,"results":"29","hashOfConfig":"17"},{"size":1042,"mtime":1611764105805,"results":"30","hashOfConfig":"17"},{"size":277,"mtime":1611764102429,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hj2o9b",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js",[],["68","69"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js",["70","71"],"import React from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport { Button } from '@material-ui/core'\n\nimport {  HeaderPoll, Container } from '../lib/Styling'\nimport { useSelector } from 'react-redux'\n\nimport { poll } from '../reducer/poll'\n\nexport const PollingLink= () => {\n  const pollId = useSelector((store) => store.poll.pollId) // change if we solve the nesting problem\n  const url = `http://localhost:3000/voting/${pollId}`\n  return (\n    <Container>\n      <HeaderPoll>Tadaa your link</HeaderPoll>\n      <p>{url}</p>\n      <Button variant='contained' color='secondary'>Copy Link</Button>\n      <Link to='/'>\n        <Button variant='contained' color='primary'>Back to Start Page</Button>\n      </Link>\n    </Container>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar.js",["72"],"import React from 'react'\nimport { NavLink, useParams } from 'react-router-dom'\nimport styled from 'styled-components/macro'\n\nconst NavContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`\n\nconst Logo = styled.h1`\n    font-size: 20px;\n`\n\nconst NavText = styled.h2`\n    font-size: 16px;\n`\n\n\nexport const Navbar = () => {\n  return (\n    <NavContainer>\n      <NavLink to='/'>\n        <Logo>Logo</Logo>\n      </NavLink>\n      <NavLink to='/about'>\n        <NavText>About</NavText>\n      </NavLink>\n      <NavLink to='/systemicconsensing'>\n        <NavText>Systemic consensing</NavText>\n      </NavLink>\n    </NavContainer>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js",["73"],"import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Button } from '@material-ui/core'\n\nimport { Option } from '../components/Option'\nimport { Summary } from '../components/Summary'\nimport { poll } from '../reducer/poll'\nimport { Form, InputTopic, InputOptions, AddButton, HeaderPoll, PollContainer } from '../lib/Styling'\n\nexport const CreatePoll= () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const pollId = useSelector((store) => store.poll.pollId)\n  const POLL_URL = 'http://localhost:9000/poll'\n\n  // States to handle conditional rendering\n  const [showTopic, setShowTopic] = useState(true)\n  const [showOptions, setShowOptions] = useState(false)\n  const [showSummary, setShowSummary] = useState(false)\n\n  // States & variable to handle user input\n  const [newOption, setNewOption] = useState('')\n  const [newTopic, setNewTopic] = useState('')\n  const allOptions = useSelector((store) => store.poll.options)\n\n  // Function to handle conditional rendering and add a topic on first view\n  const handleShowOptions = () => {\n    dispatch(poll.actions.addTopic(newTopic))\n    setShowTopic(false)\n    setShowOptions(true)\n  }\n\n  // Function to only handle conditional rendering\n  const handleBackToTopic = () => {\n    setShowTopic(true)\n    setShowOptions(false)\n  }\n\n  const handleShowSummary = () => {\n    setShowSummary(true)\n    setShowOptions(false)\n  }\n  \n  const handleBackToOptions = () => {\n    setShowOptions(true)\n    setShowSummary(false)\n  }\n\n  // Function to handle adding an option\n  const onAddOption = event => {\n    event.preventDefault()\n    dispatch(poll.actions.addOneOption(newOption))\n    setNewOption('')\n  }\n\n  // Function to send poll data to the backend\n  const handleFinishPoll = event => {\n    event.preventDefault()\n    const pollTopic = newTopic\n    const pollOptions = allOptions\n    fetch(POLL_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify({ pollTopic, pollOptions })\n    })\n      .then((res) => res.json())\n\n      .then((json) => {\n        console.log(json)\n        // if(json.error) {\n        //   throw new Error('Could not create poll')\n        // } else {\n          dispatch(poll.actions.setPollId(json.pollId))     \n        // }\n      })\n  }\n\nuseEffect(() => {\n  if(pollId) {\n    history.push('/pollinglink')\n  }\n}, [pollId, history])\n\n  return (\n    <>\n    <PollContainer>\n      { showTopic && \n        <section>\n          <HeaderPoll>Create poll</HeaderPoll>\n          <Form>\n            <label>Topic of your poll:\n              <InputTopic\n                type='text'\n                value={newTopic}\n                onChange={event => setNewTopic(event.target.value)}\n                required\n              />\n            </label>\n            <Button onClick={handleShowOptions} variant='contained' color='primary'>Next step</Button>\n          </Form>\n        </section>\n      }\n      { showOptions && \n        <section>\n          <HeaderPoll>Add options</HeaderPoll>\n          <Form onSubmit={onAddOption}>\n          <div>\n            <InputOptions \n              type='text' \n              value={newOption}\n              onChange={event => setNewOption(event.target.value)}\n            />\n            <input type='submit' value='Add'/></div>\n          </Form>\n          <div>\n            <Button onClick={handleBackToTopic} variant='contained' color='primary' >Back</Button>\n            <Button onClick={handleShowSummary} variant='contained' color='primary'>Create poll</Button>\n          </div>\n          {allOptions.map((item) => (\n              <Option \n                key={item.optionId}\n                option={item} />\n            ))}\n        </section>\n      }\n      { showSummary && \n        <section>\n          <HeaderPoll>Summary</HeaderPoll>\n          <Summary \n            allOptions={allOptions}\n            pollTopic={newTopic}/>\n          <Button onClick={handleBackToOptions} variant='contained' color='primary'>Back</Button>\n          <Link to='/pollinglink'>\n            <Button onClick={handleFinishPoll} variant='contained' color='primary'>Finish and create link</Button>\n          </Link>\n        </section>\n      }\n    </PollContainer>\n    </>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Table.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js",[],["74","75"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js",["76"],"import React from 'react'\nimport { useSelector } from 'react-redux'\n\nexport const Summary = ({allOptions, pollTopic}) => {\n  return (\n    <>\n      <h1>Poll Topic</h1>\n      <p>{pollTopic}</p>\n      {allOptions.map((item) => (\n        <p>{item.text}</p>\n      ))}\n    </>\n  )\n\n}",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":16,"nodeType":"83","messageId":"84","endLine":2,"endColumn":25},{"ruleId":"81","severity":1,"message":"85","line":8,"column":10,"nodeType":"83","messageId":"84","endLine":8,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":2,"column":19,"nodeType":"83","messageId":"84","endLine":2,"endColumn":28},{"ruleId":"81","severity":1,"message":"86","line":9,"column":42,"nodeType":"83","messageId":"84","endLine":9,"endColumn":51},{"ruleId":"77","replacedBy":"87"},{"ruleId":"79","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":21},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","'poll' is defined but never used.","'AddButton' is defined but never used.",["90"],["91"],"'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]