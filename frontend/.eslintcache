[{"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js":"1","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js":"2","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js":"3","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js":"4","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js":"5","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js":"6","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js":"7","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js":"8","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js":"9","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/SystemicConsensing.js":"10","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Navbar.js":"11","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js":"12","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js":"13","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js":"14","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Confettis.js":"15","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js":"16","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Burger.js":"17","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/RightNav.js":"18"},{"size":432,"mtime":1612955910033,"results":"19","hashOfConfig":"20"},{"size":1706,"mtime":1612967345897,"results":"21","hashOfConfig":"20"},{"size":306,"mtime":1612966733216,"results":"22","hashOfConfig":"20"},{"size":6017,"mtime":1613040018333,"results":"23","hashOfConfig":"20"},{"size":2199,"mtime":1613041003879,"results":"24","hashOfConfig":"20"},{"size":1953,"mtime":1613040010095,"results":"25","hashOfConfig":"20"},{"size":1044,"mtime":1613035793341,"results":"26","hashOfConfig":"20"},{"size":4482,"mtime":1613040008299,"results":"27","hashOfConfig":"20"},{"size":6018,"mtime":1613040001865,"results":"28","hashOfConfig":"20"},{"size":4189,"mtime":1612968087475,"results":"29","hashOfConfig":"20"},{"size":760,"mtime":1612966495923,"results":"30","hashOfConfig":"20"},{"size":1461,"mtime":1613040012957,"results":"31","hashOfConfig":"20"},{"size":2103,"mtime":1612966857434,"results":"32","hashOfConfig":"20"},{"size":1696,"mtime":1612967022312,"results":"33","hashOfConfig":"20"},{"size":691,"mtime":1613036398901,"results":"34","hashOfConfig":"20"},{"size":11760,"mtime":1613040730388,"results":"35","hashOfConfig":"20"},{"size":400,"mtime":1612966448987,"results":"36","hashOfConfig":"20"},{"size":419,"mtime":1612962470584,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"hj2o9b",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js",[],["77","78"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js",["79"],"import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { NavLink } from 'react-router-dom'\nimport swal from 'sweetalert'\nimport { TextField } from '@material-ui/core'\n\nimport { \n  VotingContainer, \n  VotingForm, \n  NavigationButton, \n  NavigationInput,\n  VotingP,\n  YourName,\n  Select,\n  LinkBorderContainer,\n  SummaryFormLabel, \n  ButtonContainer,\n  VotingTextContainer} from '../lib/Styling'\n\nexport const Voting= () => {\n  const history = useHistory()\n  const { id } = useParams()\n  const [ pollDetails, setPollDetails ] = useState({})\n  const [ state, setState ] = useState({ voting: [] })\n\n  const POLLDETAILS_URL = `https://systemic-poll-app.herokuapp.com/poll/${id}`\n  const FINISHED_POLL_URL = `https://systemic-poll-app.herokuapp.com/finishedpoll`\n  // const POLLDETAILS_URL = `http://localhost:9000/poll/${id}`\n  // const FINISHED_POLL_URL = `http://localhost:9000/finishedpoll`\n  const points = [\"-\", 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  const storePollId = () => {\n    setState({\n      ...state,\n      pollId: id\n    })\n  }\n  \n  const handleFailedFetch = err => {\n    swal({\n      title: 'Oh no!',\n      text: 'Sorry! We couldn\\'t find the poll you were looking for!',\n      icon: 'error',\n      closeOnClickOutside: 'false',\n    })\n  }\n\n  const handleFailedPost = err => {\n    swal({\n      title: 'Oh no!',\n      text: 'We couldn\\'t send your voting. Make sure to add your name and a number of objection points to each option.',\n      icon: 'error',\n      closeOnClickOutside: false,\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n\n    if (state.voting.length < pollDetails.pollOptions.length) {\n      swal({\n        title: 'All complete?',\n        text: 'Please make sure to add a number of objection points to each option.',\n        icon: 'info',\n        closeOnClickOutside: 'false',\n      })\n    } else {\n      fetch(FINISHED_POLL_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json'},\n        body: JSON.stringify(state)\n      })\n      .then((res) => {\n        if (res.ok) {\n          return res.json()\n        } else {\n          return res.json()\n            .then((res) => {\n              throw new Error(res.message)\n            })\n        } \n      })\n      .then((json) => {\n        history.push(`/voting/${id}/results`)\n      })\n      .catch((err) => handleFailedPost(err))\n    }\n  }\n\n  const handleResults = () => {\n    history.push(`/voting/${id}/results`)\n  }\n\n  const handleSelect = (event) => {\n    let itemIndex = null\n\n    state.voting.map((item) => {\n      if (item.pollOptionId === event.target.name) {\n        itemIndex = state.voting.indexOf(item)\n      }\n      return itemIndex\n    })\n\n    if (itemIndex === null) {\n      setState({\n        ...state,\n        ...state.voting.push({\n          pollOptionId: event.target.name,\n          objectionsPoints: event.target.value\n        })\n      })\n    } else {\n      setState({\n        ...state,\n        ...state.voting.splice(itemIndex, 1, {\n          pollOptionId: event.target.name,\n          objectionsPoints: event.target.value\n        })\n      })\n    }\n  }\n\n  const handleNameInput = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  useEffect(() => {\n    fetch(POLLDETAILS_URL)\n    .then(res => {\n      if (res.ok) {\n        return res.json()\n      } else {\n        return res.json()\n          .then((res) => {\n            throw new Error(res.message)\n          })\n      }\n    })\n    .then((json) => {\n      setPollDetails(json)\n      storePollId()\n    })\n    .catch((err) => handleFailedFetch(err))\n  }, [POLLDETAILS_URL])\n\n  return (\n    <VotingContainer>\n      <LinkBorderContainer>\n        <VotingP>\n          <b>{pollDetails.pollTopic}</b>\n        </VotingP>\n        <VotingTextContainer>\n          <div className='voting-text-top'>\n            <p>\n              <i>\n                <b>This is how you vote:</b>\n              </i>\n            </p>\n            <ul >\n              <p>\n                <li className='bullet'>You will vote for every option in the list.</li>\n              </p>\n              <p>\n                <li className='bullet'>\"0\" means absolutely no resistance — \"I have no objection, I support this proposal strongly.\"</li>\n              </p>\n              <p>\n                <li className='bullet'>\"10\" means maximum resistance — \"I have huge objections, I refuse this proposal heavily.\"</li>\n              </p>\n            </ul>\n          </div>\n        </VotingTextContainer>\n        <NavLink to='/systemicconsensing' style={{ textDecoration: 'none' }}>Read more about Systemic consensing.</NavLink>\n        <VotingForm onSubmit={handleSubmit}>\n          {pollDetails.pollOptions?.map((item) => (\n            <SummaryFormLabel key={item._id}>\n              <p className='summary-form-label-text'>\n                {item.text}\n              </p>\n              <Select \n                onChange={handleSelect} \n                name={item._id}>\n                {points.map((point) => (\n                  <option \n                    value={point}\n                    key={point}>\n                    {point}\n                  </option>\n                ))}\n              </Select>\n            </SummaryFormLabel>\n          ))}\n          <YourName>\n            <p>Your name:</p>\n            <TextField\n              variant='filled'\n              color='primary'\n              style={{ margin: 10, maxWidth: 300 }}\n              type='text'\n              name='name'\n              onChange={handleNameInput} \n              placeholder='Enter your name ...'\n              required>\n            </TextField>\n          </YourName>\n          <ButtonContainer>\n            <NavigationInput type='submit' value='Submit and see results'/>\n          </ButtonContainer>\n        </VotingForm>\n        <NavigationButton onClick={handleResults}>Only see results</NavigationButton> \n      </LinkBorderContainer>\n    </VotingContainer>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/SystemicConsensing.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Navbar.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Confettis.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/Burger.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar/RightNav.js",[],["80","81"],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":147,"column":6,"nodeType":"88","endLine":147,"endColumn":23,"suggestions":"89"},{"ruleId":"82","replacedBy":"90"},{"ruleId":"84","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storePollId'. Either include it or remove the dependency array.","ArrayExpression",["94"],["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [POLLDETAILS_URL, storePollId]",{"range":"97","text":"98"},[3665,3682],"[POLLDETAILS_URL, storePollId]"]