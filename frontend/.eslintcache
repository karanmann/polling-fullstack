[{"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\index.js":"1","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\App.js":"2","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\VotingDummy.js":"3","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\LandingPage.js":"5","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\PollingLink.js":"6","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\CreatePoll.js":"7","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\Voting.js":"8","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\About.js":"9","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\VotingResults.js":"10","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\poll.js":"11","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\voting.js":"12","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Summary.js":"13","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Option.js":"14","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\lib\\Styling.js":"15","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Confettis.js":"16","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Navbar.js":"17","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Burger.js":"18","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\RightNav.js":"19"},{"size":447,"mtime":1612371712115,"results":"20","hashOfConfig":"21"},{"size":2020,"mtime":1612791576192,"results":"22","hashOfConfig":"21"},{"size":4517,"mtime":1612790392212,"results":"23","hashOfConfig":"21"},{"size":254,"mtime":1612447067731,"results":"24","hashOfConfig":"21"},{"size":1020,"mtime":1612371712117,"results":"25","hashOfConfig":"21"},{"size":2229,"mtime":1612791576195,"results":"26","hashOfConfig":"21"},{"size":6076,"mtime":1612791576194,"results":"27","hashOfConfig":"21"},{"size":5164,"mtime":1612791576196,"results":"28","hashOfConfig":"21"},{"size":1935,"mtime":1612781497368,"results":"29","hashOfConfig":"21"},{"size":4295,"mtime":1612791576224,"results":"30","hashOfConfig":"21"},{"size":1801,"mtime":1612371712119,"results":"31","hashOfConfig":"21"},{"size":370,"mtime":1612371712119,"results":"32","hashOfConfig":"21"},{"size":777,"mtime":1612430779381,"results":"33","hashOfConfig":"21"},{"size":2175,"mtime":1612371712114,"results":"34","hashOfConfig":"21"},{"size":8822,"mtime":1612791288448,"results":"35","hashOfConfig":"21"},{"size":962,"mtime":1612775330707,"results":"36","hashOfConfig":"21"},{"size":1653,"mtime":1612775416085,"results":"37","hashOfConfig":"21"},{"size":1255,"mtime":1612775416084,"results":"38","hashOfConfig":"21"},{"size":1029,"mtime":1612775416085,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1k1txta",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\index.js",[],["82","83"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\App.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\VotingDummy.js",["84"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\LandingPage.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\PollingLink.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\CreatePoll.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\Voting.js",["85","86"],"import React, { useState, useEffect } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\n\r\nimport { TextField } from '@material-ui/core'\r\nimport { \r\n  VotingContainer, \r\n  VotingForm, \r\n  NavigationButton, \r\n  NavigationInput, \r\n  YourName,\r\n  Select } from '../lib/Styling'\r\n\r\n\r\nexport const Voting= () => {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const [ pollDetails, setPollDetails ] = useState({})\r\n  // const [ name, setName ] = useState('')\r\n  const [ state, setState ] = useState({ voting: [] })\r\n  const POLLDETAILS_URL = `http://localhost:9000/poll/${id}`\r\n  const FINISHED_POLL_URL = `http://localhost:9000/finishedpoll`\r\n  const points = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\r\n\r\n  const storePollId = () => {\r\n    setState({\r\n      ...state,\r\n      pollId: id\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    \r\n    fetch(FINISHED_POLL_URL, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json'},\r\n      body: JSON.stringify(state)\r\n    })\r\n    .then((res) => res.json())\r\n    .then((json) => {\r\n      history.push(`/voting/${id}/results`)\r\n    })\r\n    console.log(state)\r\n  }\r\n\r\n  const handleSelect = (event) => {\r\n    setState({\r\n      ...state,\r\n      ...state.voting.push({\r\n        optionId: event.target.name,\r\n        objectionsPoints: event.target.value\r\n      })\r\n    })\r\n  }\r\n\r\n  const handleNameInput = (event) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.value\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetch(POLLDETAILS_URL)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setPollDetails(json)\r\n      storePollId()\r\n    })\r\n  }, [POLLDETAILS_URL])\r\n\r\n  console.log('current poll id', id)\r\n  console.log(\"polldetails\", pollDetails)\r\n\r\n  return (\r\n    <VotingContainer>\r\n      <h1>{pollDetails.pollTopic}</h1>\r\n      <p>\r\n        <i>This is how you vote:</i>\r\n      </p>\r\n      <p>You will vote for every option in the list. \"0\" means absolutely no resistance — \"I have no objection, I support this proposal strongly.\"\r\n      \"10\" means maximum resistance — \"I have huge objections, I refuse this proposal heavily.\"</p>\r\n      <NavLink to='/systemicconsensing' style={{ textDecoration: 'none' }}>Read more about the principle behind Systemic consensing.</NavLink>\r\n      <VotingForm onSubmit={handleSubmit}>\r\n        {pollDetails.pollOptions?.map((item) => (\r\n          <label>{item.text}\r\n              <Select \r\n                onChange={handleSelect} \r\n                name={item._id}\r\n              >\r\n                {points.map((point) => (\r\n                  <option value={point}>{point}</option>\r\n                ))}\r\n              </Select>\r\n            </label>\r\n        ))}\r\n        <YourName>\r\n          <p>Your name:</p>\r\n          <TextField\r\n            variant='filled'\r\n            color='primary'\r\n            style={{ margin: 10, maxWidth: 300 }}\r\n            type='text'\r\n            name='name'\r\n            value={state.example}\r\n            onChange={handleNameInput} \r\n            placeholder='Enter your name ...'\r\n            required>\r\n          </TextField>\r\n        </YourName>\r\n        <NavigationInput type='submit' value='Submit your answer and see results'/>\r\n      </VotingForm>\r\n      <NavigationButton>Only see results</NavigationButton>\r\n    </VotingContainer>\r\n  )\r\n}","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\About.js",["87","88","89","90"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\VotingResults.js",["91"],"import React, { useEffect, useState} from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nimport { Confettis} from '../components/Confettis'\r\nimport { \r\n  LinkBorderContainer, \r\n  EachResult,\r\n  ResultContainer\r\n } from '../lib/Styling'\r\n\r\nexport const VotingResults= () => {\r\n  const { id } = useParams()\r\n  const FINISHED_POLLS_URL = `https://systemic-poll-app.herokuapp.com/finishedpoll/${id}`\r\n  const POLLDETAILS_URL = `https://systemic-poll-app.herokuapp.com/poll/${id}`\r\n  // const FINISHED_POLLS_URL = `http://localhost:9000/finishedpoll/${id}`\r\n  // const POLLDETAILS_URL = `http://localhost:9000/poll/${id}`\r\n  const [finishedPolls, setFinishedPolls] = useState([])\r\n  const [pollDetails, setPollDetails] = useState ({})\r\n\r\n  useEffect(() => {\r\n    fetch(FINISHED_POLLS_URL)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setFinishedPolls(json.finishedPolls)\r\n      console.log(finishedPolls)\r\n    })\r\n    fetch(POLLDETAILS_URL)\r\n    .then(res => res.json())\r\n    .then((json) => {\r\n      setPollDetails(json)\r\n      console.log(pollDetails)\r\n    })\r\n\r\n  }, [FINISHED_POLLS_URL, POLLDETAILS_URL])\r\n\r\n  console.log(finishedPolls)\r\n  console.log(pollDetails)\r\n  \r\n  // // First step: build prel to look like this\r\n  //   // {\r\n  //   //   456: [2,5,8],\r\n  //   //   789: [8,5,1],\r\n  //   //   523: [7,3,2]\r\n  //   // }\r\n\r\n    const prel = {}\r\n    for (let i = 0; i < finishedPolls.length; i++) {\r\n      console.log('loop running', i)\r\n      finishedPolls[i].voting.forEach(obj => {\r\n        const {optionId, objectionsPoints} = obj\r\n        if (prel[optionId]) {\r\n          prel[optionId].push(objectionsPoints)\r\n       } else {\r\n          prel[optionId] = [objectionsPoints]\r\n       }\r\n      })\r\n    };\r\n    \r\n    console.log(prel)\r\n  \r\n    // console.log(prel)\r\n\r\n    // Second step: build prelAsValuesArray to look like this\r\n    // [ [456,[2,5,8]], [789, [8,5,1]], [523, [7,3,2]] ]\r\n\r\n    const prelAsValuesArray = Object.entries(prel)\r\n\r\n     // Third step: build result to look like this\r\n    // {\r\n    //   456: 15,\r\n    //   789: 14,\r\n    //   523: 12\r\n    // }\r\n\r\n    const result = {}\r\n    prelAsValuesArray.map(item => {\r\n     return result[item[0]] = item[1].reduce((a,b) => a + b)\r\n    })\r\n    console.log(result)\r\n\r\n    // Fourth step: Build resultEntries to look like this\r\n    // [[456,12], [789,14], [523,12]]\r\n\r\n    const resultEntries = Object.entries(result)\r\n    resultEntries.sort((a,b) => {\r\n      return a[1] - b[1]\r\n    })\r\n    console.log(resultEntries)\r\n\r\n    // In the return statement, map through all the options in the original poll.\r\n    // At the same time, map through the item in resultEntries.\r\n    // If you find a matching option / result-entry, display the option text and the second part (the points) of the result entry.\r\n\r\n   \r\n  \r\n  \r\n    return (\r\n    <>\r\n<<<<<<< HEAD\r\n    <ResultContainer>\r\n    <LinkBorderContainer>\r\n        <EachResult>\r\n          <p><b>OPTIONS</b></p> \r\n          <p><b>TOTAL</b></p>\r\n        </EachResult>\r\n        <br></br>\r\n        {resultEntries.map((pair, index) => {\r\n            return (\r\n              pollDetails.pollOptions?.map((option) => (\r\n                option._id === pair[0] &&\r\n                    <EachResult \r\n                    true={index}>\r\n                    <p>{option.text}</p> \r\n                    <p>{pair[1]}</p>\r\n                  </EachResult>\r\n                  \r\n              ))\r\n            )\r\n        })}\r\n    </LinkBorderContainer>  \r\n   </ResultContainer>\r\n   <Confettis />\r\n   </>\r\n=======\r\n      <ResultContainer>\r\n        <LinkBorderContainer>\r\n            <EachResult>\r\n              <p><b>OPTIONS</b></p> \r\n              <p><b>TOTAL</b></p>\r\n            \r\n            </EachResult>\r\n            {pollDetails.pollOptions?.map((option) => {\r\n                return (\r\n                  resultEntries.map((pair) => (\r\n                    option._id === pair[0] &&\r\n                      <EachResult>\r\n                        <p>{option.text}</p> \r\n                        <p>{pair[1]}</p>\r\n                      </EachResult>\r\n                      \r\n                  ))\r\n                )\r\n            })}\r\n        </LinkBorderContainer>  \r\n      </ResultContainer>\r\n      <Confettis />\r\n    </>\r\n>>>>>>> e0bf04a3418c27170772145e5b35ea2c18aa074b\r\n  )\r\n}","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\poll.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\voting.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Summary.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Option.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\lib\\Styling.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Confettis.js",["92"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Confetti from 'react-confetti'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Div = styled.div `\r\nwidth: auto;\r\nheight: 3000px;\r\n`\r\n\r\nexport const Confettis = () => {\r\n  const [height, setHeight] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const confettiRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setHeight(confettiRef.current.clientHeight);\r\n    setWidth(confettiRef.current.clientWidth);\r\n  }, [])\r\n\r\n\r\n/*  const handleShow = toggle => {\r\n    setShow(toggle);\r\n  } \r\n */\r\n  return (\r\n    <>\r\n      <Div\r\n/*         onMouseEnter={() => handleShow(true)}\r\n        onMouseLeave={() => handleShow(false)} */\r\n        ref={confettiRef}>\r\n          <Confetti\r\n            recycle={show}\r\n            numberOfPieces={800}\r\n            width={width}\r\n            height={height}\r\n        />\r\n      </Div>\r\n    </>\r\n  );\r\n}","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Burger.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\RightNav.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":17},{"ruleId":"97","severity":1,"message":"101","line":3,"column":10,"nodeType":"99","messageId":"100","endLine":3,"endColumn":21},{"ruleId":"102","severity":1,"message":"103","line":73,"column":6,"nodeType":"104","endLine":73,"endColumn":23,"suggestions":"105"},{"ruleId":"97","severity":1,"message":"106","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":25},{"ruleId":"97","severity":1,"message":"107","line":1,"column":27,"nodeType":"99","messageId":"100","endLine":1,"endColumn":33},{"ruleId":"97","severity":1,"message":"108","line":1,"column":35,"nodeType":"99","messageId":"100","endLine":1,"endColumn":44},{"ruleId":"97","severity":1,"message":"109","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"110","line":34,"column":6,"nodeType":"104","endLine":34,"endColumn":43,"suggestions":"111"},{"ruleId":"97","severity":1,"message":"112","line":13,"column":16,"nodeType":"99","messageId":"100","endLine":13,"endColumn":23},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storePollId'. Either include it or remove the dependency array.","ArrayExpression",["115"],"'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'styled' is defined but never used.","React Hook useEffect has missing dependencies: 'finishedPolls' and 'pollDetails'. Either include them or remove the dependency array.",["116"],"'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},"Update the dependencies array to be: [POLLDETAILS_URL, storePollId]",{"range":"121","text":"122"},"Update the dependencies array to be: [FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]",{"range":"123","text":"124"},[1790,1807],"[POLLDETAILS_URL, storePollId]",[1090,1127],"[FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]"]