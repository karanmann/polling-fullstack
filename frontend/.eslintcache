[{"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js":"1","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js":"2","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js":"3","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar.js":"4","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/VotingDummy.js":"5","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js":"6","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js":"7","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js":"8","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js":"9","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js":"10","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js":"11","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/voting.js":"12","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js":"13","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js":"14","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js":"15","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js":"16"},{"size":432,"mtime":1610965996661,"results":"17","hashOfConfig":"18"},{"size":1745,"mtime":1612685695871,"results":"19","hashOfConfig":"18"},{"size":245,"mtime":1612169373723,"results":"20","hashOfConfig":"18"},{"size":2077,"mtime":1612688852849,"results":"21","hashOfConfig":"18"},{"size":3762,"mtime":1612342635389,"results":"22","hashOfConfig":"18"},{"size":3933,"mtime":1612685695873,"results":"23","hashOfConfig":"18"},{"size":5398,"mtime":1612685695873,"results":"24","hashOfConfig":"18"},{"size":991,"mtime":1612349397255,"results":"25","hashOfConfig":"18"},{"size":1461,"mtime":1612527712618,"results":"26","hashOfConfig":"18"},{"size":3088,"mtime":1612685695874,"results":"27","hashOfConfig":"18"},{"size":1741,"mtime":1611871726492,"results":"28","hashOfConfig":"18"},{"size":352,"mtime":1611931436247,"results":"29","hashOfConfig":"18"},{"size":2622,"mtime":1612520375951,"results":"30","hashOfConfig":"18"},{"size":748,"mtime":1612520375949,"results":"31","hashOfConfig":"18"},{"size":2097,"mtime":1612265621512,"results":"32","hashOfConfig":"18"},{"size":7804,"mtime":1612685695872,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"hj2o9b",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/index.js",[],["69","70"],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/App.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Footer.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Navbar.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/VotingDummy.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/Voting.js",["71","72"],"import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\n\nimport { TextField } from '@material-ui/core'\nimport { \n  VotingContainer, \n  VotingForm, \n  NavigationButton, \n  VotingButton,\n  YourName,\n  Select,\n  LinkBorderContainer,\n  SummaryFormLabel, \n  ButtonContainer,\n  VotingTextContainer} from '../lib/Styling'\n\n\nexport const Voting= () => {\n  const history = useHistory()\n  const { id } = useParams()\n  const [ pollDetails, setPollDetails ] = useState({})\n  // const [ name, setName ] = useState('')\n  const [ state, setState ] = useState({ voting: [] })\n\n  const POLLDETAILS_URL = `https://systemic-poll-app.herokuapp.com/poll/${id}`\n  const FINISHED_POLL_URL = `https://systemic-poll-app.herokuapp.com/finishedpoll`\n  // const POLLDETAILS_URL = `http://localhost:9000/poll/${id}`\n  // const FINISHED_POLL_URL = `http://localhost:9000/finishedpoll`\n  const points = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n\n  const storePollId = () => {\n    setState({\n      ...state,\n      pollId: id\n    })\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    \n    fetch(FINISHED_POLL_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json'},\n      body: JSON.stringify(state)\n    })\n    .then((res) => res.json())\n    .then((json) => {\n      history.push(`/voting/${id}/results`)\n    })\n    console.log(state)\n  }\n\n  const handleSelect = (event) => {\n    setState({\n      ...state,\n      ...state.voting.push({\n        optionId: event.target.name,\n        objectionsPoints: event.target.value\n      })\n    })\n  }\n\n  const handleNameInput = (event) => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    })\n  }\n\n  useEffect(() => {\n    fetch(POLLDETAILS_URL)\n    .then(res => res.json())\n    .then((json) => {\n      setPollDetails(json)\n      storePollId()\n    })\n  }, [POLLDETAILS_URL])\n\n  console.log('current poll id', id)\n  console.log(\"polldetails\", pollDetails)\n\n  return (\n    <VotingContainer>\n      <LinkBorderContainer>\n        <h1>{pollDetails.pollTopic}</h1>\n        <VotingTextContainer>\n          <p>\n            <i><b>This is how you vote:</b></i>\n          </p>\n          <ul>\n            <p>\n              <li>You will vote for every option in the list. \"0\" means absolutely no resistance — \"I have no objection, I support this proposal strongly.\"</li>\n            </p>\n            <p>\n              <li>\"10\" means maximum resistance — \"I have huge objections, I refuse this proposal heavily.\"</li>\n            </p>\n          </ul>\n        </VotingTextContainer>\n        <a href=\"http://localhost:3000/systemicconsensing\" >Read more about the principle behind Systemic consensing.</a>\n        <VotingForm onSubmit={handleSubmit}>\n          {pollDetails.pollOptions?.map((item) => (\n            <SummaryFormLabel>{item.text}\n              <Select \n                onChange={handleSelect} \n                name={item._id}\n              >\n                {points.map((point) => (\n                  <option value={point}>{point}</option>\n                ))}\n              </Select>\n            </SummaryFormLabel>\n          ))}\n          <YourName>\n            <p>Your name:</p>\n            <TextField\n              variant='filled'\n              color='primary'\n              style={{ margin: 10, maxWidth: 300 }}\n              type='text'\n              name='name'\n              value={state.example}\n              onChange={handleNameInput} \n              placeholder='Enter your name ...'\n              required>\n            </TextField>\n          </YourName>\n          <ButtonContainer>\n            <VotingButton type='submit' value='Submit your answer and see results'/>\n            <NavigationButton>Only see results</NavigationButton>\n          </ButtonContainer>\n        </VotingForm>\n        \n      </LinkBorderContainer>\n    </VotingContainer>\n  )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/CreatePoll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/LandingPage.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/PollingLink.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/VotingResults.js",["73","74"],"import React, { useEffect, useState} from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport { VotingDummy } from '../components/VotingDummy'\nimport { LinkBorderContainer } from '../lib/Styling'\n\nexport const VotingResults= () => {\n  const { id } = useParams()\n  const FINISHED_POLLS_URL = `https://systemic-poll-app.herokuapp.com/finishedpoll/${id}`\n  const POLLDETAILS_URL = `https://systemic-poll-app.herokuapp.com/poll/${id}`\n  // const FINISHED_POLLS_URL = `http://localhost:9000/finishedpoll/${id}`\n  // const POLLDETAILS_URL = `http://localhost:9000/poll/${id}`\n  const [finishedPolls, setFinishedPolls] = useState([])\n  const [pollDetails, setPollDetails] = useState ({})\n\n  useEffect(() => {\n    fetch(FINISHED_POLLS_URL)\n    .then(res => res.json())\n    .then((json) => {\n      setFinishedPolls(json.finishedPolls)\n      console.log(finishedPolls)\n    })\n    fetch(POLLDETAILS_URL)\n    .then(res => res.json())\n    .then((json) => {\n      setPollDetails(json)\n      console.log(pollDetails)\n    })\n\n  }, [FINISHED_POLLS_URL, POLLDETAILS_URL])\n\n  console.log(finishedPolls)\n  console.log(pollDetails)\n  \n  // // First step: build prel to look like this\n  //   // {\n  //   //   456: [2,5,8],\n  //   //   789: [8,5,1],\n  //   //   523: [7,3,2]\n  //   // }\n\n    const prel = {}\n    for (let i = 0; i < finishedPolls.length; i++) {\n      console.log('loop running', i)\n      finishedPolls[i].voting.forEach(obj => {\n        const {optionId, objectionsPoints} = obj\n        if (prel[optionId]) {\n          prel[optionId].push(objectionsPoints)\n       } else {\n          prel[optionId] = [objectionsPoints]\n       }\n      })\n    };\n    \n    console.log(prel)\n  \n    // console.log(prel)\n\n    // Second step: build prelAsValuesArray to look like this\n    // [ [456,[2,5,8]], [789, [8,5,1]], [523, [7,3,2]] ]\n\n    const prelAsValuesArray = Object.entries(prel)\n\n     // Third step: build result to look like this\n    // {\n    //   456: 15,\n    //   789: 14,\n    //   523: 12\n    // }\n\n    const result = {}\n    prelAsValuesArray.map(item => {\n     return result[item[0]] = item[1].reduce((a,b) => a + b)\n    })\n    console.log(result)\n\n    // Fourth step: Build resultEntries to look like this\n    // [[456,12], [789,14], [523,12]]\n\n    const resultEntries = Object.entries(result)\n    console.log(resultEntries)\n\n    // In the return statement, map through all the options in the original poll.\n    // At the same time, map through the item in resultEntries.\n    // If you find a matching option / result-entry, display the option text and the second part (the points) of the result entry.\n\n  return (\n    <LinkBorderContainer>\n      {pollDetails.pollOptions?.map((option) => {\n          return (\n            resultEntries.map((pair) => (\n              option._id === pair[0] &&\n                <div>\n                  <p>{option.text}</p> \n                  <p>{pair[1]}</p>\n                </div>\n                \n            ))\n          )\n        })}\n    </LinkBorderContainer>\n  )\n  // return (\n  //   <>\n  //     <VotingDummy />\n  //     <p>Total</p>\n  //   </>\n  // )\n}","/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/poll.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/reducer/voting.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/pages/About.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Summary.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/components/Option.js",[],"/Users/karanmann/Desktop/Technigo/polling-fullstack/frontend/src/lib/Styling.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":79,"column":6,"nodeType":"85","endLine":79,"endColumn":23,"suggestions":"86"},{"ruleId":"79","severity":1,"message":"87","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":21},{"ruleId":"83","severity":1,"message":"88","line":30,"column":6,"nodeType":"85","endLine":30,"endColumn":43,"suggestions":"89"},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storePollId'. Either include it or remove the dependency array.","ArrayExpression",["92"],"'VotingDummy' is defined but never used.","React Hook useEffect has missing dependencies: 'finishedPolls' and 'pollDetails'. Either include them or remove the dependency array.",["93"],"no-global-assign","no-unsafe-negation",{"desc":"94","fix":"95"},{"desc":"96","fix":"97"},"Update the dependencies array to be: [POLLDETAILS_URL, storePollId]",{"range":"98","text":"99"},"Update the dependencies array to be: [FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]",{"range":"100","text":"101"},[1925,1942],"[POLLDETAILS_URL, storePollId]",[1024,1061],"[FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]"]