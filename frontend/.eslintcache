[{"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\index.js":"1","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\App.js":"2","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\VotingDummy.js":"3","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Footer.js":"4","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\LandingPage.js":"5","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\PollingLink.js":"6","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\CreatePoll.js":"7","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\Voting.js":"8","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\About.js":"9","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\VotingResults.js":"10","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\poll.js":"11","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\voting.js":"12","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Summary.js":"13","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Option.js":"14","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\lib\\Styling.js":"15","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Confettis.js":"16","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Navbar.js":"17","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Burger.js":"18","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\RightNav.js":"19"},{"size":447,"mtime":1612371712115,"results":"20","hashOfConfig":"21"},{"size":2020,"mtime":1612856847307,"results":"22","hashOfConfig":"21"},{"size":4517,"mtime":1612790392212,"results":"23","hashOfConfig":"21"},{"size":254,"mtime":1612447067731,"results":"24","hashOfConfig":"21"},{"size":1100,"mtime":1612856787749,"results":"25","hashOfConfig":"21"},{"size":2323,"mtime":1612797405013,"results":"26","hashOfConfig":"21"},{"size":6071,"mtime":1612863076671,"results":"27","hashOfConfig":"21"},{"size":5258,"mtime":1612878667276,"results":"28","hashOfConfig":"21"},{"size":1835,"mtime":1612878765943,"results":"29","hashOfConfig":"21"},{"size":3616,"mtime":1612878449778,"results":"30","hashOfConfig":"21"},{"size":1801,"mtime":1612371712119,"results":"31","hashOfConfig":"21"},{"size":370,"mtime":1612371712119,"results":"32","hashOfConfig":"21"},{"size":1395,"mtime":1612799414427,"results":"33","hashOfConfig":"21"},{"size":2175,"mtime":1612371712114,"results":"34","hashOfConfig":"21"},{"size":10186,"mtime":1612878552323,"results":"35","hashOfConfig":"21"},{"size":962,"mtime":1612775330707,"results":"36","hashOfConfig":"21"},{"size":1744,"mtime":1612873446726,"results":"37","hashOfConfig":"21"},{"size":1305,"mtime":1612862855252,"results":"38","hashOfConfig":"21"},{"size":1029,"mtime":1612874216041,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1k1txta",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\index.js",[],["81","82"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\App.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\VotingDummy.js",["83"],"import { Divider } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nimport styled from 'styled-components/macro'\r\n\r\nexport const VotingDummy = () => {\r\n    const poll = { \r\n        _id: '123',\r\n        pollTopic: 'Example Poll',\r\n        pollOptions: [{\r\n            _id: '456',\r\n            text: 'First option'\r\n        },\r\n        {\r\n            _id: '789',\r\n            text: 'Second option'\r\n        },\r\n        {\r\n            _id: '523',\r\n            text: 'Third option'\r\n        }\r\n        ]\r\n      } \r\n    const finishedPolls = [\r\n        {\r\n           name: 'Bob',\r\n           pollId: '123',\r\n           voting: \r\n           [\r\n               {\r\n                   optionId: '456',\r\n                   objectionsPoints: 2,\r\n               },\r\n\r\n               {\r\n                    optionId: '789',\r\n                    objectionsPoints: 8,\r\n            },\r\n            {\r\n                    optionId: '523',\r\n                    objectionsPoints: 7,\r\n            }\r\n           ] \r\n        },\r\n\r\n        {\r\n            name: 'Ann',\r\n            pollId: '123',\r\n            voting: \r\n            [\r\n                {\r\n                    optionId: '456',\r\n                    objectionsPoints: 5,\r\n                },\r\n                {\r\n                    optionId: '789',\r\n                    objectionsPoints: 5,\r\n            },\r\n            {\r\n                    optionId: '523',\r\n                    objectionsPoints: 3,\r\n            }\r\n            ] \r\n         },\r\n\r\n         {\r\n            name: 'Kim',\r\n            pollId: '123',\r\n            voting: \r\n            [\r\n                {\r\n                    optionId: '456',\r\n                    objectionsPoints: 8,\r\n                },\r\n                {\r\n                    optionId: '789',\r\n                    objectionsPoints: 1,\r\n            },\r\n            {\r\n                    optionId: '523',\r\n                    objectionsPoints: 2,\r\n            }\r\n            ] \r\n         }\r\n    ]\r\n\r\n    \r\n    // code from Maks. OBS result !=== our result\r\n    // const result = {}; xAsValuesArray.map(item => { result[item[0]] = item[1].reduce((a, b) => a + b); });\r\n    // const xAsValuesArray = Object.entries(x);\r\n\r\n    \r\n    // Changing the structure of our data to make it more accessible for JSX\r\n\r\n    // First step: build prel to look like this\r\n    // {\r\n    //   456: [2,5,8],\r\n    //   789: [8,5,1],\r\n    //   523: [7,3,2]\r\n    // }\r\n\r\n    const prel = {}\r\n    for (let i = 0; i < finishedPolls.length; i++) {\r\n      finishedPolls[i].voting.forEach(obj => {\r\n        const {optionId, objectionsPoints} = obj\r\n        if (prel[optionId]) {\r\n          prel[optionId].push(objectionsPoints)\r\n       } else {\r\n          prel[optionId] = [objectionsPoints]\r\n       }\r\n      })\r\n    };\r\n    console.log(prel)\r\n\r\n    // Second step: build prelAsValuesArray to look like this\r\n    // [ [456,[2,5,8]], [789, [8,5,1]], [523, [7,3,2]] ]\r\n\r\n    const prelAsValuesArray = Object.entries(prel)\r\n\r\n    // Thirs step: build result to look like this\r\n    // {\r\n    //   456: 15,\r\n    //   789: 14,\r\n    //   523: 12\r\n    // }\r\n\r\n    const result = {}\r\n    prelAsValuesArray.map(item => {\r\n     return result[item[0]] = item[1].reduce((a,b) => a + b)\r\n    })\r\n    console.log(result)\r\n\r\n    // Fourth step: Build resultEntries to look like this\r\n    // [[456,12], [789,14], [523,12]]\r\n\r\n    const resultEntries = Object.entries(result)\r\n    resultEntries.sort((a,b) => {\r\n      return a[1] - b[1]\r\n    })\r\n    \r\n    console.log(resultEntries)\r\n   \r\n    // In the return statement, map through all the options in the original poll.\r\n    // At the same time, map through the item in resultEntries.\r\n    // If you find a matching option / result-entry, display the option text and the second part (the points) of the result entry.\r\n\r\n \r\n/* const winnerColor = () => {\r\n          const isWinner = (Math.min(pair[1]))\r\n          if (isWinner.isCorrect) {\r\n      return '#28df99'\r\n    }\r\n      */\r\nconst Points = styled.p `\r\n  border: ${props => props.true === 0 ? 'solid green 2px' : ''}\r\n`\r\n\r\n \r\n\r\n    return (\r\n      <>\r\n        {resultEntries.map((pair, index) => {\r\n          return (\r\n            poll.pollOptions.map(option => (\r\n              option._id === pair[0] &&\r\n              <div>\r\n                <p>{option.text}</p>\r\n                <Points \r\n                true={index}\r\n                >{pair[1]}\r\n                </Points>\r\n              </div>\r\n            ))\r\n          )\r\n        })}\r\n      </>\r\n    )\r\n}","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Footer.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\LandingPage.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\PollingLink.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\CreatePoll.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\Voting.js",["84","85"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\About.js",["86","87","88"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\pages\\VotingResults.js",["89"],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\poll.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\reducer\\voting.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Summary.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Option.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\lib\\Styling.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Confettis.js",["90"],"import React, { useState, useRef, useEffect } from 'react'\r\nimport Confetti from 'react-confetti'\r\nimport styled from 'styled-components/macro'\r\n\r\nconst Div = styled.div `\r\nwidth: auto;\r\nheight: 3000px;\r\n`\r\n\r\nexport const Confettis = () => {\r\n  const [height, setHeight] = useState(null);\r\n  const [width, setWidth] = useState(null);\r\n  const [show, setShow] = useState(false);\r\n  const confettiRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    setHeight(confettiRef.current.clientHeight);\r\n    setWidth(confettiRef.current.clientWidth);\r\n  }, [])\r\n\r\n\r\n/*  const handleShow = toggle => {\r\n    setShow(toggle);\r\n  } \r\n */\r\n  return (\r\n    <>\r\n      <Div\r\n/*         onMouseEnter={() => handleShow(true)}\r\n        onMouseLeave={() => handleShow(false)} */\r\n        ref={confettiRef}>\r\n          <Confetti\r\n            recycle={show}\r\n            numberOfPieces={800}\r\n            width={width}\r\n            height={height}\r\n        />\r\n      </Div>\r\n    </>\r\n  );\r\n}","C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Navbar.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\Burger.js",[],"C:\\Users\\ingel\\1_Technigo\\MyProjects\\polling-fullstack\\frontend\\src\\components\\Navbar\\RightNav.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":17},{"ruleId":"95","severity":1,"message":"99","line":3,"column":10,"nodeType":"97","messageId":"98","endLine":3,"endColumn":21},{"ruleId":"100","severity":1,"message":"101","line":133,"column":6,"nodeType":"102","endLine":133,"endColumn":23,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"104","line":1,"column":17,"nodeType":"97","messageId":"98","endLine":1,"endColumn":25},{"ruleId":"95","severity":1,"message":"105","line":1,"column":27,"nodeType":"97","messageId":"98","endLine":1,"endColumn":33},{"ruleId":"95","severity":1,"message":"106","line":1,"column":35,"nodeType":"97","messageId":"98","endLine":1,"endColumn":44},{"ruleId":"100","severity":1,"message":"107","line":34,"column":6,"nodeType":"102","endLine":34,"endColumn":43,"suggestions":"108"},{"ruleId":"95","severity":1,"message":"109","line":13,"column":16,"nodeType":"97","messageId":"98","endLine":13,"endColumn":23},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'storePollId'. Either include it or remove the dependency array.","ArrayExpression",["112"],"'useState' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'finishedPolls' and 'pollDetails'. Either include them or remove the dependency array.",["113"],"'setShow' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"114","fix":"115"},{"desc":"116","fix":"117"},"Update the dependencies array to be: [POLLDETAILS_URL, storePollId]",{"range":"118","text":"119"},"Update the dependencies array to be: [FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]",{"range":"120","text":"121"},[3149,3166],"[POLLDETAILS_URL, storePollId]",[1090,1127],"[FINISHED_POLLS_URL, POLLDETAILS_URL, finishedPolls, pollDetails]"]